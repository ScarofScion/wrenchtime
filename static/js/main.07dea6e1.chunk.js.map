{"version":3,"sources":["components/AuthService.js","components/SignInDialog.js","components/Store.js","components/Header.js","components/Home.js","components/AddCarForm.js","components/CarList.js","components/Car.js","components/Wrench.js","components/Time.js","components/About.js","App.js","serviceWorker.js","index.js"],"names":["AuthService","_this","this","Object","classCallCheck","firebaseAuth","firebase","auth","_currentUser$","Observable","create","observer","onAuthStateChanged","user","next","pipe","share","signOut","SignInDialog","props","possibleConstructorReturn","getPrototypeOf","call","firebaseUiConfig","signInFlow","signInOptions","GoogleAuthProvider","PROVIDER_ID","PhoneAuthProvider","callbacks","signInSuccessWithAuthResult","result","authService","signIn","react_default","a","createElement","react_firebaseui","uiConfig","Component","Store","db","firestore","settings","timestampsInSnapshots","_destinations$","collection","onSnapshot","querySnapshot","destinations","forEach","doc","push","objectSpread","id","data","dest","add","delete","Header","className","NavLink","exact","to","Home","AddCarForm","type","name","CarList","Car","src","components_AddCarForm","components_CarList","Wrench","Time","About","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","App","store","state","onDestinationCreate","bind","assertThisInitialized","onDestinationDelete","handleSignOut","_this2","currentUserSubscription","currentUser$","subscribe","setState","switchMap","u","destinations$","observableFrom","unsubscribe","destinationsSubscription","createDestination","deleteDestination","body","displayName","onClick","BrowserRouter","Route","path","component","components_SignInDialog","Boolean","window","location","hostname","match","ReactDOM","render","basename","process","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iRA0BeA,aApBb,SAAAA,IAAc,IAAAC,EAAAC,KAAAC,OAAAC,EAAA,EAAAD,CAAAD,KAAAF,GACZE,KAAKG,aAAeC,IAASC,OAC7BL,KAAKM,cAAgBC,IAAWC,OAAO,SAAAC,GACrCV,EAAKI,aAAaO,mBAAmB,SAAAC,GACnCF,EAASG,KAAKD,OAEfE,KAAKC,+NAUFd,KAAKG,aAAaY,iJANxB,OAAOf,KAAKM,+BCgBDU,cA1Bb,SAAAA,EAAYC,GAAO,IAAAlB,EAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAD,KAAAgB,IACjBjB,EAAAE,OAAAiB,EAAA,EAAAjB,CAAAD,KAAAC,OAAAkB,EAAA,EAAAlB,CAAAe,GAAAI,KAAApB,KAAMiB,KACDI,iBAAmB,CACtBC,WAAY,QACZC,cAAe,CACbnB,IAASC,KAAKmB,mBAAmBC,YACjCrB,IAASC,KAAKqB,kBAAkBD,aAElCE,UAAW,CACTC,4BAA6B,SAAAC,GAC3B9B,EAAKkB,MAAMa,YAAYC,OAAOF,EAAOlB,SAV1BZ,wEAiBjB,OACEiC,EAAAC,EAAAC,cAACC,EAAA,aAAD,CACEC,SAAUpC,KAAKqB,iBACflB,aAAcH,KAAKiB,MAAMa,YAAY3B,sBArBlBkC,qBCyCZC,qBAxCb,SAAAA,IAAc,IAAAvC,EAAAC,KAAAC,OAAAC,EAAA,EAAAD,CAAAD,KAAAsC,GACZtC,KAAKuC,GAAKnC,IAASoC,YAEnBxC,KAAKuC,GAAGE,SAAS,CACfC,uBAAuB,IAGzB1C,KAAK2C,eAAiBpC,IAAWC,OAAO,SAAAC,GAatC,OAZoBV,EAAKwC,GACtBK,WAAW,gBACXC,WAAW,SAAAC,GACV,IAAMC,EAAe,GACrBD,EAAcE,QAAQ,SAAAC,GAAG,OACvBF,EAAaG,KAAbjD,OAAAkD,EAAA,EAAAlD,CAAA,CACEmD,GAAIH,EAAIG,IACLH,EAAII,WAGX5C,EAASG,KAAKmC,OAGjBlC,KAAKC,qHAOcwC,mFAChBtD,KAAKuC,GAAGK,WAAW,gBAAgBW,IAAID,gJAG7BF,GAChB,OAAOpD,KAAKuC,GACTK,WAAW,gBACXK,IAAIG,GACJI,+CAXH,OAAOxD,KAAK2C,mDCQDc,EAnCA,kBACbzB,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,QAAMwB,UAAU,YACd1B,EAAAC,EAAAC,cAAA,KAAGwB,UAAU,oBAEf1B,EAAAC,EAAAC,cAAA,MAAIwB,UAAU,YACZ1B,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAASC,OAAK,EAACC,GAAG,KAAlB,SAIF7B,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAASC,OAAK,EAACC,GAAG,mBAAlB,QAIF7B,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAASC,OAAK,EAACC,GAAG,sBAAlB,WAIF7B,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAASC,OAAK,EAACC,GAAG,oBAAlB,SAIF7B,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAASC,OAAK,EAACC,GAAG,qBAAlB,aCPOC,EArBF,kBACX9B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,wSAMAF,EAAAC,EAAAC,cAAA,gOAKAF,EAAAC,EAAAC,cAAA,4MCMW6B,EApBI,kBACjB/B,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,qBAEEF,EAAAC,EAAAC,cAAA,SAAO8B,KAAK,OAAOC,KAAK,UAE1BjC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,sBAEEF,EAAAC,EAAAC,cAAA,SAAO8B,KAAK,OAAOC,KAAK,WAE1BjC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,wBAEEF,EAAAC,EAAAC,cAAA,SAAO8B,KAAK,SAASC,KAAK,aAE5BjC,EAAAC,EAAAC,cAAA,uBCVWgC,EANC,kBACdlC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,wBCUWiC,EAVH,kBACVnC,EAAAC,EAAAC,cAAA,OAAKwB,UAAU,aACb1B,EAAAC,EAAAC,cAAA,OAAKwB,UAAU,WAAWU,IAAI,oCAC9BpC,EAAAC,EAAAC,cAAA,0BAEAF,EAAAC,EAAAC,cAACmC,EAAD,MACArC,EAAAC,EAAAC,cAACoC,EAAD,QCNWC,EAFA,kBAAMvC,EAAAC,EAAAC,cAAA,6BCENsC,EAFF,kBAAMxC,EAAAC,EAAAC,cAAA,2BCoBJuC,EAnBD,kBACZzC,EAAAC,EAAAC,cAAA,OAAKwB,UAAU,aACb1B,EAAAC,EAAAC,cAAA,k0BCkCJ9B,IAASsE,cAAc,CACrBC,OAAQ,0CACRC,WAAY,kCACZC,YAAa,yCACbC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,qBA6FNC,cAzFb,SAAAA,IAAc,IAAAlF,EAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAD,KAAAiF,IACZlF,EAAAE,OAAAiB,EAAA,EAAAjB,CAAAD,KAAAC,OAAAkB,EAAA,EAAAlB,CAAAgF,GAAA7D,KAAApB,QACKkF,MAAQ,IAAI5C,EACjBvC,EAAK+B,YAAc,IAAIhC,EACvBC,EAAKoF,MAAQ,GAEbpF,EAAKqF,oBAAsBrF,EAAKqF,oBAAoBC,KAAzBpF,OAAAqF,EAAA,EAAArF,CAAAF,IAC3BA,EAAKwF,oBAAsBxF,EAAKwF,oBAAoBF,KAAzBpF,OAAAqF,EAAA,EAAArF,CAAAF,IAC3BA,EAAKyF,cAAgBzF,EAAKyF,cAAcH,KAAnBpF,OAAAqF,EAAA,EAAArF,CAAAF,IARTA,mFAWM,IAAA0F,EAAAzF,KAClBA,KAAK0F,wBAA0B1F,KAAK8B,YAAY6D,aAAaC,UAC3D,SAAAjF,GAAI,OAAI8E,EAAKI,SAAS,CAAElF,WAE1BX,KAAK8B,YAAY6D,aACd9E,KAAKiF,YAAU,SAAAC,GAAC,OAAKA,EAAIN,EAAKP,MAAMc,cAAgBC,YAAe,OACnEL,UAAU,SAAA7C,GAAY,OAAI0C,EAAKI,SAAS,CAAE9C,kEAI7C/C,KAAK0F,wBAAwBQ,cAC7BlG,KAAKmG,yBAAyBD,0DAGZ5C,GAClBtD,KAAKkF,MAAMkB,kBAAkB9C,+CAGXA,GAClBtD,KAAKkF,MAAMmB,kBAAkB/C,EAAKF,4CAIlCpD,KAAK8B,YAAYf,2CAIjB,IAAIuF,EAqCJ,OAjCEA,EAHGtG,KAAKmF,MAAMxE,KAEsB,MAA3BX,KAAKmF,MAAMpC,aAElBf,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,0BACiBlC,KAAKmF,MAAMxE,KAAK4F,YAC/BvE,EAAAC,EAAAC,cAAA,UAAQsE,QAASxG,KAAKwF,eAAtB,aAEFxD,EAAAC,EAAAC,cAAA,6BAKFF,EAAAC,EAAAC,cAAA,WAIEF,EAAAC,EAAAC,cAACuE,EAAA,EAAD,KACEzE,EAAAC,EAAAC,cAAA,OAAKwB,UAAU,aACb1B,EAAAC,EAAAC,cAACwE,EAAA,EAAD,CAAOC,KAAK,IAAIC,UAAWnD,IAC3BzB,EAAAC,EAAAC,cAACwE,EAAA,EAAD,CAAO9C,OAAK,EAAC+C,KAAK,IAAIC,UAAW9C,IACjC9B,EAAAC,EAAAC,cAACwE,EAAA,EAAD,CAAO9C,OAAK,EAAC+C,KAAK,kBAAkBC,UAAWzC,IAC/CnC,EAAAC,EAAAC,cAACwE,EAAA,EAAD,CAAO9C,OAAK,EAAC+C,KAAK,qBAAqBC,UAAWrC,IAClDvC,EAAAC,EAAAC,cAACwE,EAAA,EAAD,CAAO9C,OAAK,EAAC+C,KAAK,mBAAmBC,UAAWpC,IAChDxC,EAAAC,EAAAC,cAACwE,EAAA,EAAD,CAAO9C,OAAK,EAAC+C,KAAK,oBAAoBC,UAAWnC,MAGrDzC,EAAAC,EAAAC,cAAA,0BACiBlC,KAAKmF,MAAMxE,KAAK4F,YAC/BvE,EAAAC,EAAAC,cAAA,UAAQsE,QAASxG,KAAKwF,eAAtB,cA7BCxD,EAAAC,EAAAC,cAAC2E,EAAD,CAAc/E,YAAa9B,KAAK8B,cAoCvCE,EAAAC,EAAAC,cAAA,OAAKwB,UAAU,OACb1B,EAAAC,EAAAC,cAAA,UAAQwB,UAAU,cAChB1B,EAAAC,EAAAC,cAAA,MAAIwB,UAAU,aAAd,eAGF1B,EAAAC,EAAAC,cAAA,OAAKwB,UAAU,sBACb1B,EAAAC,EAAAC,cAAA,OAAKwB,UAAU,YAAY4C,YAnFnBjE,aCpCEyE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACPpF,EAAAC,EAAAC,cAACuE,EAAA,EAAD,CAAQY,SAAUC,eAChBtF,EAAAC,EAAAC,cAACqF,EAAD,OAEFC,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.07dea6e1.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport {Observable} from 'rxjs';\r\nimport {share} from 'rxjs/operators';\r\n\r\nclass AuthService {\r\n  constructor() {\r\n    this.firebaseAuth = firebase.auth();\r\n    this._currentUser$ = Observable.create(observer => {\r\n      this.firebaseAuth.onAuthStateChanged(user => {\r\n        observer.next(user);\r\n      });\r\n    }).pipe(share());\r\n  }\r\n\r\n  get currentUser$() {\r\n    return this._currentUser$;\r\n  }\r\n\r\n  signIn() {}\r\n\r\n  async signOut() {\r\n    await this.firebaseAuth.signOut();\r\n  }\r\n}\r\n\r\nexport default AuthService;\r\n","import React, {Component} from 'react';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport {FirebaseAuth} from 'react-firebaseui';\r\n\r\nclass SignInDialog extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.firebaseUiConfig = {\r\n      signInFlow: 'popup',\r\n      signInOptions: [\r\n        firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n        firebase.auth.PhoneAuthProvider.PROVIDER_ID,\r\n      ],\r\n      callbacks: {\r\n        signInSuccessWithAuthResult: result => {\r\n          this.props.authService.signIn(result.user);\r\n        },\r\n      },\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <FirebaseAuth\r\n        uiConfig={this.firebaseUiConfig}\r\n        firebaseAuth={this.props.authService.firebaseAuth}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignInDialog;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport { Observable } from \"rxjs\";\r\nimport { share } from \"rxjs/operators\";\r\n\r\nclass Store {\r\n  constructor() {\r\n    this.db = firebase.firestore();\r\n\r\n    this.db.settings({\r\n      timestampsInSnapshots: true\r\n    });\r\n\r\n    this._destinations$ = Observable.create(observer => {\r\n      const unsubscribe = this.db\r\n        .collection(\"destinations\")\r\n        .onSnapshot(querySnapshot => {\r\n          const destinations = [];\r\n          querySnapshot.forEach(doc =>\r\n            destinations.push({\r\n              id: doc.id,\r\n              ...doc.data()\r\n            })\r\n          );\r\n          observer.next(destinations);\r\n        });\r\n      return unsubscribe;\r\n    }).pipe(share());\r\n  }\r\n\r\n  get destinations$() {\r\n    return this._destinations$;\r\n  }\r\n\r\n  async createDestination(dest) {\r\n    await this.db.collection(\"destinations\").add(dest);\r\n  }\r\n\r\n  deleteDestination(id) {\r\n    return this.db\r\n      .collection(\"destinations\")\r\n      .doc(id)\r\n      .delete();\r\n  }\r\n}\r\n\r\nexport default Store;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Navbar, Nav, NavItem, NavDropdown, MenuItem } from \"react-bootstrap\";\r\n\r\nconst Header = () => (\r\n  <header>\r\n    <span className=\"wrn-logo\">\r\n      <i className=\"material-icons\" />\r\n    </span>\r\n    <ul className=\"main-nav\">\r\n      <li>\r\n        <NavLink exact to=\"/\">\r\n          Home\r\n        </NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink exact to=\"/components/Car\">\r\n          Car\r\n        </NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink exact to=\"/components/Wrench\">\r\n          Wrench\r\n        </NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink exact to=\"/components/Time\">\r\n          Time\r\n        </NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink exact to=\"/components/About\">\r\n          About\r\n        </NavLink>\r\n      </li>\r\n    </ul>\r\n  </header>\r\n);\r\n\r\nexport default Header;\r\n\r\n{\r\n  /* <header>\r\n    <span className=\"wrn-logo\">\r\n      <i className=\"material-icons\" />\r\n    </span>\r\n    <ul className=\"main-nav\">\r\n      <li>\r\n        <NavLink exact to=\"/\">\r\n          Home\r\n        </NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink exact to=\"/components/Car\">\r\n          Car\r\n        </NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink exact to=\"/components/Wrench\">\r\n          Wrench\r\n        </NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink exact to=\"/components/Time\">\r\n          Time\r\n        </NavLink>\r\n      </li>\r\n    </ul>\r\n  </header> */\r\n}\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Home = () => (\r\n  <div>\r\n    <p>\r\n      If you're anything like me and love nice cars then the last thing you want\r\n      to do is pay $30,000 for a brand new Civic. However looking at what type\r\n      of cars are sold every year and how sports cars are being less and less\r\n      popular its fair to say that the age of sports cars maybe over.\r\n    </p>\r\n    <p>\r\n      But there is hope. You have seem in on the streets haven't you? That car\r\n      from the early 2000s or even older that you coveted forever but now think\r\n      you can't own it because its too unreliable or expensive to own?\r\n    </p>\r\n    <p>\r\n      Well they all know something that you may not. That is why this website is\r\n      about. It's here to guide you to owning the type of car that you love\r\n      instead of the car you have to have to live.\r\n    </p>\r\n  </div>\r\n);\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nconst AddCarForm = () => (\r\n  <form>\r\n    <label>\r\n      Make:\r\n      <input type=\"text\" name=\"make\" />\r\n    </label>\r\n    <br />\r\n    <label>\r\n      Model:\r\n      <input type=\"text\" name=\"Model\" />\r\n    </label>\r\n    <br />\r\n    <label>\r\n      Mileage:\r\n      <input type=\"number\" name=\"Mileage\" />\r\n    </label>\r\n    <button>Add</button>\r\n  </form>\r\n);\r\n\r\nexport default AddCarForm;\r\n","import React from \"react\";\r\n\r\nconst CarList = () => (\r\n  <div>\r\n    <h3>Car List</h3>\r\n  </div>\r\n);\r\n\r\nexport default CarList;\r\n","import React from \"react\";\r\nimport AddCarForm from \"./AddCarForm\";\r\nimport CarList from \"./CarList\";\r\n\r\nconst Car = () => (\r\n  <div className=\"container\">\r\n    <img className=\"showcase\" src=\"https://i.imgur.com/qLtnksU.jpg\" />\r\n    <h3>Add Car Form</h3>\r\n\r\n    <AddCarForm />\r\n    <CarList />\r\n  </div>\r\n);\r\n\r\nexport default Car;\r\n","import React from \"react\";\r\n\r\nconst Wrench = () => <h3>this is wrench</h3>;\r\n\r\nexport default Wrench;\r\n","import React from \"react\";\r\n\r\nconst Time = () => <h3>this is time</h3>;\r\n\r\nexport default Time;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst About = () => (\r\n  <div className=\"container\">\r\n    <p>\r\n      When I grew up I was lucky to have a mechanic as a stepfather. While we\r\n      not have gotten along in every way he did show me how to work on my car.\r\n      My stepdad while is no banker is a pretty decent mechanic. Which means he\r\n      always owned very old beater cars. He would buy a car, fix it up and then\r\n      sell it for a bit of profit. We definitely had our share of cars. Mostly\r\n      Hondas. Staring with the Accord, two Civics, CRX, and CR-V. We also had a\r\n      few Nissans. Maxima, 240sx, and my 350z. Not mentioning the domestic\r\n      car/van like the a police Crown Vic, GM Astro Van and many more. However\r\n      even after this amount of experience and I also had a huge interest in\r\n      cars I did not actively maintain my car properly. While stepdad can swap\r\n      an engine and replace a transmission he's never really owned a car he\r\n      wanted to keep forever.\r\n    </p>\r\n  </div>\r\n);\r\n\r\nexport default About;\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport AuthService from \"./components/AuthService\";\r\nimport SignInDialog from \"./components/SignInDialog\";\r\nimport Store from \"./components/Store\";\r\n\r\n//LOOK INTO RXJS\r\nimport { from as observableFrom } from \"rxjs\";\r\nimport { switchMap } from \"rxjs/operators\";\r\n\r\n//App components\r\nimport Header from \"./components/Header\";\r\nimport Home from \"./components/Home\";\r\nimport Car from \"./components/Car\";\r\nimport Wrench from \"./components/Wrench\";  \r\nimport Time from \"./components/Time\";\r\nimport About from \"./components/About\";\r\nimport firebase from \"firebase/app\";\r\n\r\n//react-bootstrap\r\nimport {\r\n  Grid,\r\n  Row,\r\n  Col,\r\n  Clearfix,\r\n  Alert,\r\n  Badge,\r\n  Button,\r\n  Jumbotron,\r\n  FormGroup,\r\n  ButtonGroup,\r\n  ButtonToolbar,\r\n  DropdownButton,\r\n  MenuItem,\r\n  PageHeader,\r\n  Navbar\r\n} from \"react-bootstrap\";\r\n\r\n//initilize firebase\r\nfirebase.initializeApp({\r\n  apiKey: \"AIzaSyBUGJfi6yh4Gsn1ljsN74AgNz6_IG7Bhhk\",\r\n  authDomain: \"wrenchtime-b4yt.firebaseapp.com\",\r\n  databaseURL: \"https://wrenchtime-b4yt.firebaseio.com\",\r\n  projectId: \"wrenchtime-b4yt\",\r\n  storageBucket: \"wrenchtime-b4yt.appspot.com\",\r\n  messagingSenderId: \"251706795155\"\r\n});\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.store = new Store();\r\n    this.authService = new AuthService();\r\n    this.state = {};\r\n\r\n    this.onDestinationCreate = this.onDestinationCreate.bind(this);\r\n    this.onDestinationDelete = this.onDestinationDelete.bind(this);\r\n    this.handleSignOut = this.handleSignOut.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.currentUserSubscription = this.authService.currentUser$.subscribe(\r\n      user => this.setState({ user })\r\n    );\r\n    this.authService.currentUser$\r\n      .pipe(switchMap(u => (u ? this.store.destinations$ : observableFrom([]))))\r\n      .subscribe(destinations => this.setState({ destinations }));\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.currentUserSubscription.unsubscribe();\r\n    this.destinationsSubscription.unsubscribe();\r\n  }\r\n\r\n  onDestinationCreate(dest) {\r\n    this.store.createDestination(dest);\r\n  }\r\n\r\n  onDestinationDelete(dest) {\r\n    this.store.deleteDestination(dest.id);\r\n  }\r\n\r\n  handleSignOut() {\r\n    this.authService.signOut();\r\n  }\r\n\r\n  render() {\r\n    let body;\r\n    if (!this.state.user) {\r\n      body = <SignInDialog authService={this.authService} />;\r\n    } else if (this.state.destinations == null) {\r\n      body = (\r\n        <div>\r\n          <p>\r\n            Signed in as: {this.state.user.displayName}\r\n            <button onClick={this.handleSignOut}>Sign out</button>\r\n          </p>\r\n          <p>Loading data...</p>\r\n        </div>\r\n      );\r\n    } else {\r\n      body = (\r\n        <div>\r\n         \r\n          \r\n\r\n          <BrowserRouter>\r\n            <div className=\"container\">\r\n              <Route path=\"/\" component={Header} />\r\n              <Route exact path=\"/\" component={Home} />\r\n              <Route exact path=\"/components/Car\" component={Car} />\r\n              <Route exact path=\"/components/Wrench\" component={Wrench} />\r\n              <Route exact path=\"/components/Time\" component={Time} />\r\n              <Route exact path=\"/components/About\" component={About} />\r\n            </div>\r\n          </BrowserRouter>\r\n          <p>\r\n            Signed in as: {this.state.user.displayName}\r\n            <button onClick={this.handleSignOut}>Sign out</button>\r\n          </p>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <h1 className=\"App-title\">Wrenchtime</h1>\r\n        </header>\r\n\r\n        <div className=\"App-body-container\">\r\n          <div className=\"App-body\">{body}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <Router basename={process.env.PUBLIC_URL}>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}